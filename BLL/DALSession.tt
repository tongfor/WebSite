<#@ template language="C#" debug="True" hostspecific="True" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ include file="../T4Include/MysqlDbHelper.ttinclude"#>
<#@ include file="../T4Include/config.ttinclude"#>
/** 
* DALSession.cs
*
* 功 能： 数据工厂
* 类 名： DALSession
*
* Ver    变更日期             负责人  变更内容
* ───────────────────────────────────
* V0.01  <#=DateTime.Now.ToString()#>   N/A    初版
*
*┌──────────────────────────────────┐
*│　此技术信息为本公司机密信息，未经本公司书面同意禁止向第三方披露．　│
*│　版权所有：成都盈辉创动科技有限公司　　　　　　　　　　　　　　│
*└──────────────────────────────────┘
*/

using IDAL;
using DALMySql;
using Models;

namespace BLL
{
	public class DALSession
    {
        //EF上下文
        protected readonly CdyhcdDBContext _db;

        public DALSession(CdyhcdDBContext db)
        {
            _db = db;
        }
<#
int rownumber=1;
foreach(var table in MysqlDbHelper.GetDbTables(config.ConnectionString, config.DbDatabase))
{#>
<# string tableName = MysqlDbHelper.ToSplitFirstUpper(table.TableName); #>

        #region <#=rownumber.ToString().PadLeft(2,'0')#> 数据接口 I<#=tableName#>DAL
	    I<#=tableName#>DAL _i<#=tableName#>DAL;
		public I<#=tableName#>DAL I<#=tableName#>DAL
		{
			get { return _i<#=tableName#>DAL ?? (_i<#=tableName#>DAL = new <#=tableName#>DAL(_db)); }
	        set { _i<#=tableName#>DAL = value; }			
		}
        #endregion
<#
    rownumber++;
}
#>
    }
}




